name: JS Example Tests

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
      api_key:
        required: false
        type: string
      base_url:
        required: false
        type: string
      author:
        required: false
        type: string
      commit_message:
        required: false
        type: string
      dont_notify:
        required: false
        type: boolean
  workflow_dispatch:
    inputs:
      working-directory:
        required: false
        type: string
      api_key:
        required: false
        type: string
      base_url:
        required: false
        type: string
      author:
        required: false
        type: string
      commit_message:
        required: false
        type: string
        
jobs:
  run-js-tests:
    name: Run JS Example Tests
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: ["18"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: |
          pnpm install @ai-sdk/openai ai composio-core dotenv zod @langchain/openai @langchain/core langchain
      - name: Run Tests
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
          JULEP_API_KEY: ${{secrets.JULEP_API_KEY}}
          JULEP_API_URL: ${{secrets.JULEP_API_URL}}
          LISTENNOTES_API_KEY: ${{secrets.LISTENNOTES_API_KEY}}
          COMPOSIO_API_KEY: ${{ inputs.api_key || secrets.COMPOSIO_API_KEY_RELEASE }}
          COMPOSIO_BASE_URL: 'https://backend.composio.dev'
          HELICONE_API_KEY: ${{secrets.HELICONE_API_KEY}}
        run: |
          pnpm exec jest tests/test_examples.test.js
      - name: Slack Notification on Failure
        if: ${{ failure() && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'release') && !contains(github.event.head_commit.message, 'Release') && !inputs.dont_notify }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_TECH_WEBHOOK }}
          SLACK_TITLE: "JS Example Tests Failed"
          SLACK_MSG_AUTHOR: ${{ inputs.author || github.actor }}
          SLACK_MESSAGE: "<@Apoorv> <@kaavee> ${{ inputs.commit_message || github.event.head_commit.message }}"
          SLACK_LINK_NAMES: "true"
          SLACK_COLOR: "failure"
          SLACK_USERNAME: "GitHub Actions Bot"
          SLACK_ICON_EMOJI: ":x:"
          SLACK_FOOTER: "Failed Example Tests | GitHub Actions"