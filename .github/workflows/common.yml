name: main_workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lock_check:
    defaults:
      run:
        working-directory: python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install uv and check requirements
        run: |
          # Install uv with error handling
          if ! pip install uv; then
            echo "Failed to install UV package manager"
            exit 1
          fi
          
          # Install packages with error handling
          if ! uv pip install -e .[all]; then
            echo "Failed to install required packages"
            exit 1
          fi
          
          if ! uv pip freeze; then
            echo "Failed to freeze dependencies"
            exit 1
          fi
          
          if ! uv pip run composio --help; then
            echo "Failed to run composio help"
            exit 1
          fi

  linter_checks:
    defaults:
      run:
        working-directory: python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dependencies
        run: |
          pip install tox
      - name: Run black
        run: |
          tox -e black-check
      - name: Run isort
        run: |
          tox -e isort-check
      - name: Run flake8
        run: |
          tox -e flake8
      - name: Run pylint
        run: |
          tox -e pylint
      - name: Run mypy
        run: |
          tox -e mypy

  swe:
    defaults:
      run:
        working-directory: python
    runs-on: ${{ matrix.os }}
    if: >
      github.event_name == 'schedule' ||
(github.event_name == 'push' && (contains(join(github.event.commits.*.modified, '|'), 'python/swe/') || contains(join(github.event.commits.*.added, '|'), 'python/swe/') || contains(join(github.event.commits.*.removed, '|'), 'python/swe/') || contains(join(github.event.commits.*.modified, '|'), 'python/') || contains(join(github.event.commits.*.added, '|'), 'python/') || contains(join(github.event.commits.*.removed, '|'), 'python/'))) ||
        (github.event_name == 'pull_request' && (contains(toJSON(github.event.pull_request.files), 'python/swe/') || contains(toJSON(github.event.pull_request.files), 'python/')))
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dependencies
        run: |
          pip install tox
      - name: Run tests
        env:
          COMPOSIO_API_KEY: ${{ secrets.COMPOSIO_API_KEY_STAGING }}
          COMPOSIO_BASE_URL: ${{ secrets.COMPOSIO_BASE_URL_STAGING }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          E2B_API_KEY: ${{ secrets.E2B_API_KEY_STAGING }}
        run: |
          if ! cd swe && tox -e py; then
            echo "Failed to run swe tests"
            exit 1
          fi

  test:
    defaults:
      run:
        working-directory: python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10, 3.11]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dependencies
        run: |
          pip install tox
      - name: Run tests
        env:
          COMPOSIO_API_KEY: ${{ secrets.COMPOSIO_API_KEY_STAGING }}
          COMPOSIO_BASE_URL: ${{ secrets.COMPOSIO_BASE_URL_STAGING }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          E2B_API_KEY: ${{ secrets.E2B_API_KEY_STAGING }}
        run: |
          if ! tox -e py; then
            echo "Failed to run tests"
            exit 1
          fi

  e2e:
    defaults:
      run:
        working-directory: python
    runs-on: ${{ matrix.os }}
    if: >
      github.event_name == 'schedule' ||
      (github.event_name == 'push' && !contains(join(github.event.commits.*.modified, ' '), 'fern/') && !contains(join(github.event.commits.*.added, ' '), 'fern/') && !contains(join(github.event.commits.*.removed, ' '), 'fern/') && !contains(join(github.event.commits.*.modified, ' '), 'docs/') && !contains(join(github.event.commits.*.added, ' '), 'docs/') && !contains(join(github.event.commits.*.removed, ' '), 'docs/') && !contains(join(github.event.commits.*.modified, ' '), '.md') && !contains(join(github.event.commits.*.added, ' '), '.md') && !contains(join(github.event.commits.*.removed, ' '), '.md')) ||
      (github.event_name == 'pull_request' && !contains(toJSON(github.event.pull_request.files), 'fern/') && !contains(toJSON(github.event.pull_request.files), 'docs/') && !contains(toJSON(github.event.pull_request.files), '.md'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10]
    steps:
      - uses: actions/checkout@v4
      - name: Install Docker Engine
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli
          sudo systemctl start docker
          sudo systemctl enable docker
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dependencies
        run: |
          pip install tox
      - name: Run tests
        env:
          COMPOSIO_API_KEY: ${{ secrets.COMPOSIO_API_KEY_STAGING }}
          COMPOSIO_BASE_URL: ${{ secrets.COMPOSIO_BASE_URL_STAGING }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          E2B_API_KEY: ${{ secrets.E2B_API_KEY_STAGING }}
        run: |
          if ! tox -e e2e; then
            echo "Failed to run e2e tests"
            exit 1
          fi
