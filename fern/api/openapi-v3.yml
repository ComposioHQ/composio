openapi: 3.0.0
info:
  version: 3.0.0
  title: Composio Platform API
  description: API documentation for the Composio Platform
servers:
  - url: http://localhost:9901
    description: local API
  - url: https://staging-backend.composio.dev
    description: Staging API
  - url: http://localhost:9901
    description: Local API
security:
  - ApiKeyAuth: []
  - CookieAuth: []
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - message
    InviteTeamMemberBody:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
        verifyHost:
          type: string
      required:
        - email
        - name
        - role
    UpdateTeamMemberBody:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
      required:
        - name
        - email
        - role
    EmptyResponse:
      type: object
      properties: {}
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      required:
        - error
  parameters: {}
tags:
  - name: Authentication
    description: Authentication related endpoints
  - name: Auth Configs
    description: Authentication configuration management
  - name: CLI
    description: CLI integration endpoints
  - name: Connected Accounts
    description: Connected account management
  - name: Logs
    description: Logging and monitoring
  - name: OpenAPI
    description: OpenAPI specification management
  - name: Organization
    description: Organization management
  - name: API Keys
    description: API key management
  - name: Webhooks
    description: Webhook configuration
  - name: Team
    description: Team member management
  - name: Toolkits
    description: Toolkit and tool management
  - name: Tools
    description: Tool execution endpoints
  - name: Triggers
    description: Trigger management and execution
  - name: Payments
    description: Payment and subscription management
  - name: Files
    description: File management
paths:
  /api/v3/auth/{provider_name}/callback:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      parameters:
        - schema:
            type: string
            enum:
              - github
              - google
          required: true
          name: provider_name
          in: path
        - schema:
            type: string
          required: false
          name: code
          in: query
        - schema:
            type: string
          required: false
          name: state
          in: query
        - schema:
            type: string
          required: false
          name: authCode
          in: query
        - schema:
            type: string
          required: false
          name: error
          in: query
        - schema:
            type: string
          required: false
          name: error_description
          in: query
      responses:
        '200':
          description: Successfully verified OAuth login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      jwtToken:
                        type: string
                      userData:
                        type: object
                        properties:
                          email:
                            type: string
                        required:
                          - email
                    required:
                      - jwtToken
                      - userData
                required:
                  - message
                  - data
        '204':
          description: Preflight request
        '302':
          description: Redirect to app with authentication result
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/{provider_name}/login:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      parameters:
        - schema:
            type: string
          required: true
          name: provider_name
          in: path
        - schema:
            type: string
          required: false
          name: redirectUri
          in: query
      responses:
        '302':
          description: Redirect to OAuth provider
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/{provider_name}/one-tap:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      parameters:
        - schema:
            type: string
            enum:
              - github
              - google
          required: true
          name: provider_name
          in: path
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        jwt:
                          type: string
                      required:
                        - jwt
                    type:
                      type: string
                      enum:
                        - jwt
                  required:
                    - data
                    - type
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        authCode:
                          type: string
                      required:
                        - authCode
                    type:
                      type: string
                      enum:
                        - auth-code
                  required:
                    - data
                    - type
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                    nullable: true
                  apiKey:
                    type: string
                    nullable: true
                  email:
                    type: string
                    nullable: true
                  orgId:
                    type: string
                    nullable: true
                required:
                  - clientId
                  - apiKey
                  - email
                  - orgId
        '302':
          description: Redirect to app with authentication result
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/magic_link/send:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                verifyHost:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/magic_link/verify:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '200':
          description: Successfully verified magic link
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      jwtToken:
                        type: string
                      orgId:
                        type: string
                      email:
                        type: string
                      memberId:
                        type: string
                    required:
                      - jwtToken
                      - orgId
                      - email
                      - memberId
                required:
                  - message
                  - data
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/session/info:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      responses:
        '200':
          description: Session is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: object
                    nullable: true
                    properties:
                      autoId:
                        type: number
                      id:
                        type: string
                      orgId:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      nanoId:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      webhookURL:
                        type: string
                        nullable: true
                      eventWebhookURL:
                        type: string
                        nullable: true
                      webhookSecret:
                        type: string
                        nullable: true
                      triggersEnabled:
                        type: boolean
                      lastSubscribedAt:
                        type: string
                        nullable: true
                      deleted:
                        type: boolean
                      isNewWebhook:
                        type: boolean
                      org:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          plan:
                            type: string
                          orgMembers:
                            type: array
                            items:
                              type: object
                              properties:
                                autoId:
                                  type: number
                                id:
                                  type: string
                                orgId:
                                  type: string
                                email:
                                  type: string
                                name:
                                  type: string
                                role:
                                  type: string
                                metadata:
                                  nullable: true
                                createdAt:
                                  type: string
                                updatedAt:
                                  type: string
                                deletedAt:
                                  type: string
                                  nullable: true
                              required:
                                - autoId
                                - id
                                - orgId
                                - email
                                - name
                                - role
                                - createdAt
                                - updatedAt
                                - deletedAt
                        required:
                          - id
                          - name
                          - plan
                          - orgMembers
                    required:
                      - autoId
                      - id
                      - orgId
                      - name
                      - email
                      - nanoId
                      - createdAt
                      - updatedAt
                      - webhookURL
                      - eventWebhookURL
                      - webhookSecret
                      - triggersEnabled
                      - lastSubscribedAt
                      - deleted
                      - isNewWebhook
                      - org
                  apiKey:
                    type: object
                    nullable: true
                    properties:
                      autoId:
                        type: number
                      id:
                        type: string
                      name:
                        type: string
                      projectId:
                        type: string
                      orgMemberId:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      deletedAt:
                        type: string
                        nullable: true
                      key:
                        type: string
                      deleted:
                        type: boolean
                    required:
                      - autoId
                      - id
                      - name
                      - projectId
                      - orgMemberId
                      - createdAt
                      - updatedAt
                      - deletedAt
                      - key
                      - deleted
                  org_member:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                    required:
                      - id
                      - email
                      - name
                      - role
                required:
                  - project
                  - apiKey
                  - org_member
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth/session/logout:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      responses:
        '201':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Status message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                required:
                  - message
  /api/v3/admin/identify:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                adminToken:
                  type: string
              required:
                - hash
      responses:
        '200':
          description: Successfully identified client
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                  apiKey:
                    type: string
                  email:
                    type: string
                  orgId:
                    type: string
                required:
                  - clientId
                  - apiKey
                  - email
                  - orgId
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth_configs:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                toolkit:
                  type: object
                  properties:
                    slug:
                      type: string
                      description: List of app unique keys to filter by
                  required:
                    - slug
                auth_config:
                  oneOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - use_composio_managed_auth
                        name:
                          type: string
                          description: The name of the integration
                        credentials:
                          type: object
                          additionalProperties:
                            anyOf:
                              - type: string
                              - type: boolean
                              - type: number
                          default: {}
                      required:
                        - type
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - use_custom_auth
                        name:
                          type: string
                          description: The name of the integration
                        authScheme:
                          type: string
                          enum:
                            - OAUTH2
                            - OAUTH1
                            - OAUTH1A
                            - API_KEY
                            - BASIC
                            - BILLCOM_AUTH
                            - BEARER_TOKEN
                            - GOOGLE_SERVICE_ACCOUNT
                            - NO_AUTH
                            - BASIC_WITH_JWT
                            - COMPOSIO_LINK
                            - CALCOM_AUTH
                            - SNOWFLAKE
                        credentials:
                          type: object
                          additionalProperties:
                            anyOf:
                              - type: string
                              - type: boolean
                              - type: number
                      required:
                        - type
                        - authScheme
                        - credentials
                  default:
                    type: use_composio_managed_auth
                    credentials: {}
              required:
                - toolkit
      responses:
        '201':
          description: Successfully created auth config
          content:
            application/json:
              schema:
                type: object
                properties:
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The unique key of the toolkit
                    required:
                      - slug
                  auth_config:
                    type: object
                    properties:
                      id:
                        type: string
                        description: >-
                          The auth config id of the app (must be a valid auth
                          config id)
                      auth_scheme:
                        type: string
                        description: The authentication mode of the app
                      is_composio_managed:
                        type: boolean
                        description: Whether the auth config is managed by Composio
                    required:
                      - id
                      - auth_scheme
                      - is_composio_managed
                required:
                  - toolkit
                  - auth_config
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      parameters:
        - schema:
            anyOf:
              - type: string
              - type: boolean
            description: Whether to filter by composio managed auth configs
          required: false
          description: Whether to filter by composio managed auth configs
          name: is_composio_managed
          in: query
        - schema:
            type: string
            default: '20'
            description: The number of auth configs to return
          required: false
          description: The number of auth configs to return
          name: limit
          in: query
        - schema:
            type: string
            description: The slug of the toolkit to filter by
          required: false
          description: The slug of the toolkit to filter by
          name: toolkit_slug
          in: query
        - schema:
            type: string
            description: The cursor to paginate through the auth configs
          required: false
          description: The cursor to paginate through the auth configs
          name: cursor
          in: query
      responses:
        '200':
          description: Successfully fetched auth configs
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique id of the auth config
                        uuid:
                          type: string
                          description: The unique id of the auth config
                        toolkit:
                          type: object
                          properties:
                            slug:
                              type: string
                              description: The unique key of the app
                            logo:
                              type: string
                              description: The logo of the app
                          required:
                            - slug
                            - logo
                        name:
                          type: string
                          description: The name of the auth config
                        auth_scheme:
                          type: string
                          enum:
                            - OAUTH2
                            - OAUTH1
                            - OAUTH1A
                            - API_KEY
                            - BASIC
                            - BILLCOM_AUTH
                            - BEARER_TOKEN
                            - GOOGLE_SERVICE_ACCOUNT
                            - NO_AUTH
                            - BASIC_WITH_JWT
                            - COMPOSIO_LINK
                            - CALCOM_AUTH
                            - SNOWFLAKE
                        is_composio_managed:
                          type: boolean
                        credentials:
                          type: object
                          additionalProperties:
                            nullable: true
                        status:
                          type: string
                          enum:
                            - ENABLED
                            - DISABLED
                        created_by:
                          type: string
                          description: The user who created the auth config
                        created_at:
                          type: string
                          description: The date and time the auth config was created
                        last_updated_at:
                          type: string
                          description: The date and time the auth config was last updated
                        no_of_connections:
                          type: number
                          description: The number of connections for the auth config
                        expected_input_fields:
                          type: array
                          items:
                            nullable: true
                      required:
                        - id
                        - uuid
                        - toolkit
                        - name
                        - status
                        - no_of_connections
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth_configs/{nanoid}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      parameters:
        - schema:
            type: string
          required: true
          name: nanoid
          in: path
      responses:
        '200':
          description: Successfully fetched auth config
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique id of the auth config
                  uuid:
                    type: string
                    description: The unique id of the auth config
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The unique key of the app
                      logo:
                        type: string
                        description: The logo of the app
                    required:
                      - slug
                      - logo
                  name:
                    type: string
                    description: The name of the auth config
                  auth_scheme:
                    type: string
                    enum:
                      - OAUTH2
                      - OAUTH1
                      - OAUTH1A
                      - API_KEY
                      - BASIC
                      - BILLCOM_AUTH
                      - BEARER_TOKEN
                      - GOOGLE_SERVICE_ACCOUNT
                      - NO_AUTH
                      - BASIC_WITH_JWT
                      - COMPOSIO_LINK
                      - CALCOM_AUTH
                      - SNOWFLAKE
                  is_composio_managed:
                    type: boolean
                  credentials:
                    type: object
                    additionalProperties:
                      nullable: true
                  status:
                    type: string
                    enum:
                      - ENABLED
                      - DISABLED
                  created_by:
                    type: string
                    description: The user who created the auth config
                  created_at:
                    type: string
                    description: The date and time the auth config was created
                  last_updated_at:
                    type: string
                    description: The date and time the auth config was last updated
                  no_of_connections:
                    type: number
                    description: The number of connections for the auth config
                  expected_input_fields:
                    type: array
                    items:
                      nullable: true
                required:
                  - id
                  - uuid
                  - toolkit
                  - name
                  - status
                  - no_of_connections
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      parameters:
        - schema:
            type: string
          required: true
          name: nanoid
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth_config:
                  type: object
                  properties:
                    credentials:
                      type: object
                      additionalProperties:
                        nullable: true
                      description: Authentication configuration
              required:
                - auth_config
      responses:
        '200':
          description: Successfully updated auth config
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      parameters:
        - schema:
            type: string
          required: true
          name: nanoid
          in: path
      responses:
        '200':
          description: Successfully deleted auth config
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Auth config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/auth_configs/{nanoid}/{status}:
    patch:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Auth Configs
      parameters:
        - schema:
            type: string
          required: true
          name: nanoid
          in: path
        - schema:
            type: string
            enum:
              - ENABLED
              - DISABLED
          required: true
          name: status
          in: path
      responses:
        '200':
          description: Successfully updated auth config
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/cli/create-session:
    post:
      tags:
        - CLI
      responses:
        '201':
          description: CLI session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the CLI session
                  code:
                    type: string
                    description: Temporary code to use for CLI login
                  expiresAt:
                    type: string
                    description: Expiration time of the session
                  status:
                    type: string
                    enum:
                      - pending
                      - linked
                    description: Current status of the session
                required:
                  - id
                  - code
                  - expiresAt
                  - status
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/cli/get-session:
    get:
      tags:
        - CLI
      parameters:
        - schema:
            type: string
            description: CLI session ID or code to check
          required: true
          description: CLI session ID or code to check
          name: id
          in: query
      responses:
        '200':
          description: CLI session retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the CLI session
                  code:
                    type: string
                    description: Temporary code used for CLI login
                  status:
                    type: string
                    enum:
                      - pending
                      - linked
                    description: Current status of the session
                  expiresAt:
                    type: string
                    description: Expiration time of the session
                  account:
                    type: object
                    nullable: true
                    properties:
                      id:
                        type: string
                        description: ID of the linked account
                      email:
                        type: string
                        format: email
                        description: Email of the linked account
                      name:
                        type: string
                        description: Name of the linked account
                    required:
                      - id
                      - email
                      - name
                    description: Information about the linked account, if any
                required:
                  - id
                  - code
                  - status
                  - expiresAt
                  - account
        '400':
          description: Invalid session ID or code format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: CLI session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/cli/link-session:
    put:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - CLI
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: CLI session ID or code to link
              required:
                - id
      responses:
        '200':
          description: CLI session linked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the CLI session
                  code:
                    type: string
                    description: Temporary code used for CLI login
                  status:
                    type: string
                    enum:
                      - pending
                      - linked
                    description: Current status of the session
                  expiresAt:
                    type: string
                    description: Expiration time of the session
                  account:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID of the linked account
                      email:
                        type: string
                        format: email
                        description: Email of the linked account
                      name:
                        type: string
                        description: Name of the linked account
                    required:
                      - id
                      - email
                      - name
                    description: Information about the linked account
                required:
                  - id
                  - code
                  - status
                  - expiresAt
                  - account
        '400':
          description: Invalid session ID or code format, or session already linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: CLI session or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/connected_accounts:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      parameters:
        - schema:
            type: string
            description: The toolkit slug of the connected account
          required: false
          description: The toolkit slug of the connected account
          name: toolkit_slug
          in: query
        - schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - DELETED
              - INITIATED
              - EXPIRED
              - FAILED
            description: The status of the connected account
          required: false
          description: The status of the connected account
          name: status
          in: query
        - schema:
            type: number
            nullable: true
            description: The cursor to paginate through the connected accounts
          required: false
          description: The cursor to paginate through the connected accounts
          name: cursor
          in: query
        - schema:
            type: number
            nullable: true
            description: The limit of the connected accounts to return
          required: false
          description: The limit of the connected accounts to return
          name: limit
          in: query
        - schema:
            type: string
            description: The user id of the connected account
          required: false
          description: The user id of the connected account
          name: user_id
          in: query
        - schema:
            type: string
            description: The auth config id of the connected account
          required: false
          description: The auth config id of the connected account
          name: auth_config_id
          in: query
        - schema:
            type: string
            enum:
              - created_at
              - updated_at
            description: The order by of the connected accounts
          required: false
          description: The order by of the connected accounts
          name: order_by
          in: query
      responses:
        '200':
          description: Successfully retrieved connected accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        toolkit:
                          type: object
                          properties:
                            slug:
                              type: string
                              description: The slug of the toolkit
                          required:
                            - slug
                        auth_config:
                          type: object
                          properties:
                            id:
                              type: string
                              description: The id of the auth config
                            auth_scheme:
                              type: string
                              enum:
                                - OAUTH2
                                - OAUTH1
                                - OAUTH1A
                                - API_KEY
                                - BASIC
                                - BILLCOM_AUTH
                                - BEARER_TOKEN
                                - GOOGLE_SERVICE_ACCOUNT
                                - NO_AUTH
                                - BASIC_WITH_JWT
                                - COMPOSIO_LINK
                                - CALCOM_AUTH
                                - SNOWFLAKE
                              description: The auth scheme of the auth config
                            is_composio_managed:
                              type: boolean
                              description: Whether the auth config is managed by Composio
                            is_disabled:
                              type: boolean
                              description: Whether the auth config is disabled
                          required:
                            - id
                            - auth_scheme
                            - is_composio_managed
                            - is_disabled
                        id:
                          type: string
                          description: The id of the connection
                        uuid:
                          type: string
                          description: The uuid of the connected account
                        user_id:
                          type: string
                          description: The user id of the connection
                        status:
                          type: string
                          enum:
                            - ACTIVE
                            - INACTIVE
                            - DELETED
                            - INITIATED
                            - EXPIRED
                            - FAILED
                          description: The status of the connection
                        created_at:
                          type: string
                          description: The created at of the connection
                        updated_at:
                          type: string
                          description: The updated at of the connection
                        data:
                          type: object
                          additionalProperties:
                            nullable: true
                          description: The data of the connection
                        status_reason:
                          type: string
                          nullable: true
                          description: The reason the connection is disabled
                        is_disabled:
                          type: boolean
                          description: Whether the connection is disabled
                        test_request_endpoint:
                          type: string
                          description: The endpoint to make test request for verification
                      required:
                        - toolkit
                        - auth_config
                        - id
                        - user_id
                        - status
                        - created_at
                        - updated_at
                        - data
                        - status_reason
                        - is_disabled
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth_config:
                  type: object
                  properties:
                    id:
                      type: string
                      description: >-
                        The auth config id of the app (must be a valid auth
                        config id)
                  required:
                    - id
                connection:
                  type: object
                  properties:
                    data:
                      type: object
                      additionalProperties:
                        nullable: true
                      description: Initial data to pass to the connected account
                    user_id:
                      type: string
                      default: default
                      description: The user id of the connected account
                    redirect_uri:
                      type: string
                      format: uri
                      description: The URL to redirect to after connection completion
              required:
                - auth_config
                - connection
      responses:
        '201':
          description: Successfully created connected account
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The id of the connected account
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - DELETED
                      - INITIATED
                      - EXPIRED
                      - FAILED
                    description: The status of the connected account
                  redirect_uri:
                    type: string
                    nullable: true
                    description: The redirect uri of the app
                required:
                  - id
                  - status
                  - redirect_uri
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/connected_accounts/{nanoid}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      parameters:
        - schema:
            type: string
          required: true
          description: The id of the connected account
          name: nanoid
          in: path
      responses:
        '200':
          description: Successfully retrieved connected account
          content:
            application/json:
              schema:
                type: object
                properties:
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The slug of the toolkit
                    required:
                      - slug
                  auth_config:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The id of the auth config
                      auth_scheme:
                        type: string
                        enum:
                          - OAUTH2
                          - OAUTH1
                          - OAUTH1A
                          - API_KEY
                          - BASIC
                          - BILLCOM_AUTH
                          - BEARER_TOKEN
                          - GOOGLE_SERVICE_ACCOUNT
                          - NO_AUTH
                          - BASIC_WITH_JWT
                          - COMPOSIO_LINK
                          - CALCOM_AUTH
                          - SNOWFLAKE
                        description: The auth scheme of the auth config
                      is_composio_managed:
                        type: boolean
                        description: Whether the auth config is managed by Composio
                      is_disabled:
                        type: boolean
                        description: Whether the auth config is disabled
                    required:
                      - id
                      - auth_scheme
                      - is_composio_managed
                      - is_disabled
                  id:
                    type: string
                    description: The id of the connection
                  uuid:
                    type: string
                    description: The uuid of the connection
                  user_id:
                    type: string
                    description: The user id of the connection
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - DELETED
                      - INITIATED
                      - EXPIRED
                      - FAILED
                    description: The status of the connection
                  created_at:
                    type: string
                    description: The created at of the connection
                  updated_at:
                    type: string
                    description: The updated at of the connection
                  data:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: The data of the connection
                  status_reason:
                    type: string
                    nullable: true
                    description: The reason the connected account is disabled
                  is_disabled:
                    type: boolean
                    description: Whether the connected account is disabled
                  test_request_endpoint:
                    type: string
                    description: The endpoint to make test request for verification
                  params:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: The init data of the connection
                required:
                  - toolkit
                  - auth_config
                  - id
                  - uuid
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - data
                  - status_reason
                  - is_disabled
                  - params
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      parameters:
        - schema:
            type: string
          required: true
          description: The id of the connected account
          name: nanoid
          in: path
      responses:
        '200':
          description: Successfully deleted connected account
          content:
            application/json:
              schema:
                type: object
                properties:
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The slug of the toolkit
                    required:
                      - slug
                  auth_config:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The id of the auth config
                      auth_scheme:
                        type: string
                        enum:
                          - OAUTH2
                          - OAUTH1
                          - OAUTH1A
                          - API_KEY
                          - BASIC
                          - BILLCOM_AUTH
                          - BEARER_TOKEN
                          - GOOGLE_SERVICE_ACCOUNT
                          - NO_AUTH
                          - BASIC_WITH_JWT
                          - COMPOSIO_LINK
                          - CALCOM_AUTH
                          - SNOWFLAKE
                        description: The auth scheme of the auth config
                      is_composio_managed:
                        type: boolean
                        description: Whether the auth config is managed by Composio
                      is_disabled:
                        type: boolean
                        description: Whether the auth config is disabled
                    required:
                      - id
                      - auth_scheme
                      - is_composio_managed
                      - is_disabled
                  id:
                    type: string
                    description: The id of the connection
                  uuid:
                    type: string
                    description: The uuid of the connection
                  user_id:
                    type: string
                    description: The user id of the connection
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - DELETED
                      - INITIATED
                      - EXPIRED
                      - FAILED
                    description: The status of the connection
                  created_at:
                    type: string
                    description: The created at of the connection
                  updated_at:
                    type: string
                    description: The updated at of the connection
                  data:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: The data of the connection
                  status_reason:
                    type: string
                    nullable: true
                    description: The reason the connection is disabled
                  is_disabled:
                    type: boolean
                    description: Whether the connection is disabled
                  test_request_endpoint:
                    type: string
                    description: The endpoint to make test request for verification
                required:
                  - toolkit
                  - auth_config
                  - id
                  - uuid
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - data
                  - status_reason
                  - is_disabled
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Connected account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/connected_accounts/{nanoId}/status:
    patch:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      parameters:
        - schema:
            type: string
          required: true
          description: The id of the connected account
          name: nanoId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
              required:
                - enabled
      responses:
        '200':
          description: Successfully updated connected account
          content:
            application/json:
              schema:
                type: object
                properties:
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The slug of the toolkit
                    required:
                      - slug
                  auth_config:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The id of the auth config
                      auth_scheme:
                        type: string
                        enum:
                          - OAUTH2
                          - OAUTH1
                          - OAUTH1A
                          - API_KEY
                          - BASIC
                          - BILLCOM_AUTH
                          - BEARER_TOKEN
                          - GOOGLE_SERVICE_ACCOUNT
                          - NO_AUTH
                          - BASIC_WITH_JWT
                          - COMPOSIO_LINK
                          - CALCOM_AUTH
                          - SNOWFLAKE
                        description: The auth scheme of the auth config
                      is_composio_managed:
                        type: boolean
                        description: Whether the auth config is managed by Composio
                      is_disabled:
                        type: boolean
                        description: Whether the auth config is disabled
                    required:
                      - id
                      - auth_scheme
                      - is_composio_managed
                      - is_disabled
                  id:
                    type: string
                    description: The id of the connection
                  uuid:
                    type: string
                    description: The uuid of the connection
                  user_id:
                    type: string
                    description: The user id of the connection
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - DELETED
                      - INITIATED
                      - EXPIRED
                      - FAILED
                    description: The status of the connection
                  created_at:
                    type: string
                    description: The created at of the connection
                  updated_at:
                    type: string
                    description: The updated at of the connection
                  data:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: The data of the connection
                  status_reason:
                    type: string
                    nullable: true
                    description: The reason the connection is disabled
                  is_disabled:
                    type: boolean
                    description: Whether the connection is disabled
                  test_request_endpoint:
                    type: string
                    description: The endpoint to make test request for verification
                required:
                  - toolkit
                  - auth_config
                  - id
                  - uuid
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - data
                  - status_reason
                  - is_disabled
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Connected account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/connected_accounts/{nanoid}/refresh:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Connected Accounts
      parameters:
        - schema:
            type: string
          required: true
          description: The id of the connected account
          name: nanoid
          in: path
      responses:
        '200':
          description: Successfully refreshed connected account
          content:
            application/json:
              schema:
                type: object
                properties:
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: The slug of the toolkit
                    required:
                      - slug
                  auth_config:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The id of the auth config
                      auth_scheme:
                        type: string
                        enum:
                          - OAUTH2
                          - OAUTH1
                          - OAUTH1A
                          - API_KEY
                          - BASIC
                          - BILLCOM_AUTH
                          - BEARER_TOKEN
                          - GOOGLE_SERVICE_ACCOUNT
                          - NO_AUTH
                          - BASIC_WITH_JWT
                          - COMPOSIO_LINK
                          - CALCOM_AUTH
                          - SNOWFLAKE
                        description: The auth scheme of the auth config
                      is_composio_managed:
                        type: boolean
                        description: Whether the auth config is managed by Composio
                      is_disabled:
                        type: boolean
                        description: Whether the auth config is disabled
                    required:
                      - id
                      - auth_scheme
                      - is_composio_managed
                      - is_disabled
                  id:
                    type: string
                    description: The id of the connection
                  uuid:
                    type: string
                    description: The uuid of the connection
                  user_id:
                    type: string
                    description: The user id of the connection
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - DELETED
                      - INITIATED
                      - EXPIRED
                      - FAILED
                    description: The status of the connection
                  created_at:
                    type: string
                    description: The created at of the connection
                  updated_at:
                    type: string
                    description: The updated at of the connection
                  data:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: The data of the connection
                  status_reason:
                    type: string
                    nullable: true
                    description: The reason the connection is disabled
                  is_disabled:
                    type: boolean
                    description: Whether the connection is disabled
                  test_request_endpoint:
                    type: string
                    description: The endpoint to make test request for verification
                required:
                  - toolkit
                  - auth_config
                  - id
                  - uuid
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - data
                  - status_reason
                  - is_disabled
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/internal/trigger/logs:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Logs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: string
                  enum:
                    - 5m
                    - 30m
                    - 6h
                    - 1d
                    - 1w
                    - 1month
                    - 1y
                  description: Return logs from the last N time units
                  example: 5m
                status:
                  type: string
                  enum:
                    - all
                    - success
                    - error
                  description: Filter logs by their status level
                  example: success
                search:
                  type: string
                  description: Search term to filter logs
                integrationId:
                  type: string
                  format: uuid
                entityId:
                  type: string
                limit:
                  type: number
                  description: number of logs to return
                cursor:
                  type: string
                  nullable: true
                  description: cursor that can be used to paginate through the logs
              required:
                - cursor
      responses:
        '200':
          description: Successfully retrieved trigger logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextCursor:
                    type: string
                    nullable: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        connectionId:
                          type: string
                        clientId:
                          type: string
                        status:
                          type: string
                        appName:
                          type: string
                        createdAt:
                          type: string
                        type:
                          type: string
                          enum:
                            - trigger
                            - action
                          description: Log entity type (trigger or action)
                          example: trigger
                        entityId:
                          type: string
                        meta:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                              enum:
                                - trigger
                                - action
                              description: Log entity type (trigger or action)
                              example: trigger
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                            provider:
                              type: string
                            clientId:
                              type: string
                            connectionId:
                              type: string
                            triggerProviderPayload:
                              type: string
                            triggerClientPayload:
                              type: string
                            triggerClientError:
                              type: string
                            triggerName:
                              type: string
                            triggerClientResponse:
                              type: string
                          required:
                            - id
                            - type
                            - createdAt
                            - updatedAt
                            - provider
                            - clientId
                            - connectionId
                      required:
                        - id
                        - connectionId
                        - clientId
                        - status
                        - appName
                        - createdAt
                        - type
                        - entityId
                        - meta
                    default: []
                required:
                  - nextCursor
  /api/v3/internal/action_execution/logs:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Logs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cursor:
                  type: number
                  nullable: true
                  description: cursor_that_can_be_used_to_paginate_through_the_logs
                limit:
                  type: number
                  description: number_of_logs_to_return
                case_sensitive:
                  type: boolean
                  description: whether_the_search_is_case_sensitive_or_not
                from:
                  type: number
                  description: start_time_of_the_logs_in_epoch_time
                to:
                  type: number
                  description: end_time_of_the_logs_in_epoch_time
                search_params:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                      operation:
                        type: string
                      value:
                        type: string
              required:
                - cursor
      responses:
        '200':
          description: Successfully retrieved action execution fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        actionKey:
                          type: string
                        appKey:
                          type: string
                        app:
                          type: object
                          properties:
                            icon:
                              type: string
                            name:
                              type: string
                          required:
                            - icon
                            - name
                        connectedAccountId:
                          type: string
                        entityId:
                          type: string
                        status:
                          type: string
                          enum:
                            - success
                            - failed
                        executionTime:
                          type: number
                        minimalResponse:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - id
                        - actionKey
                        - appKey
                        - app
                        - connectedAccountId
                        - entityId
                        - status
                        - executionTime
                        - minimalResponse
                        - createdAt
                  nextCursor:
                    type: number
                    nullable: true
                required:
                  - data
                  - nextCursor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /api/v3/internal/action_execution/fields:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Logs
      responses:
        '200':
          description: Successfully retrieved action execution fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The id of the field
                          displayName:
                            type: string
                            description: The display name of the field
                          type:
                            type: string
                            description: The type of the field
                          regex:
                            type: string
                            description: The regex of the field
                        required:
                          - id
                          - displayName
                          - type
                required:
                  - fields
  /api/v3/internal/action_execution/log/{id}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Logs
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      responses:
        '200':
          description: Successfully retrieved action execution fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  actionLogId:
                    type: string
                  actionId:
                    type: string
                  status:
                    type: string
                    enum:
                      - success
                      - error
                      - warning
                      - info
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      uniqueId:
                        type: string
                      icon:
                        type: string
                    required:
                      - name
                      - uniqueId
                      - icon
                  version:
                    type: string
                  connection:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      entity:
                        type: string
                    required:
                      - entity
                  session:
                    type: object
                    additionalProperties:
                      nullable: true
                  executionMetadata:
                    type: object
                    additionalProperties:
                      nullable: true
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - tool_execution
                            - fetch_connection_details
                        startTime:
                          type: number
                        endTime:
                          type: number
                        totalDuration:
                          type: number
                        status:
                          type: string
                          enum:
                            - success
                            - error
                        message:
                          type: string
                        metadata:
                          type: object
                          properties:
                            encryption:
                              type: string
                        logs:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - network
                                  - system
                              level:
                                type: string
                              message:
                                type: string
                              requestId:
                                type: string
                                format: uuid
                              time:
                                type: number
                              request:
                                type: object
                                properties:
                                  method:
                                    type: string
                                  url:
                                    type: string
                                  headers:
                                    type: object
                                    additionalProperties:
                                      type: string
                                  params:
                                    type: object
                                    additionalProperties:
                                      nullable: true
                                  timeout:
                                    type: number
                                  json:
                                    type: object
                                    additionalProperties:
                                      nullable: true
                                required:
                                  - method
                                  - url
                              response:
                                type: object
                                properties:
                                  status:
                                    type: number
                                  time:
                                    type: string
                                required:
                                  - status
                                  - time
                            required:
                              - type
                              - level
                              - message
                              - requestId
                              - time
                              - request
                              - response
                      required:
                        - type
                        - startTime
                        - endTime
                        - totalDuration
                        - status
                        - message
                  payloadReceived:
                    type: object
                    additionalProperties:
                      nullable: true
                  startTime:
                    type: number
                  endTime:
                    type: number
                  totalDuration:
                    type: string
                  response:
                    type: object
                    additionalProperties:
                      nullable: true
                  error:
                    type: object
                    additionalProperties:
                      nullable: true
                required:
                  - actionLogId
                  - actionId
                  - status
                  - app
                  - version
                  - connection
                  - session
                  - executionMetadata
                  - steps
                  - payloadReceived
                  - startTime
                  - endTime
                  - totalDuration
                  - response
                  - error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /api/v3/openapi/specs/list:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - OpenAPI
      responses:
        '200':
          description: Successfully fetched OpenAPI specs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    last_sync_at:
                      type: string
                    status:
                      type: string
                    state:
                      type: string
                    logs:
                      type: array
                      items:
                        type: object
                        properties:
                          message:
                            type: string
                          level:
                            type: string
                          timestamp:
                            type: string
                        required:
                          - message
                          - level
                          - timestamp
                    progress:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - id
                    - name
                    - created_at
                    - updated_at
                    - last_sync_at
                    - status
                    - state
                    - logs
                    - progress
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/openapi/specs/create:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - OpenAPI
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                openApiSpec:
                  type: string
                authConfig:
                  type: string
              required:
                - name
                - openApiSpec
                - authConfig
      responses:
        '201':
          description: Successfully created OpenAPI spec
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                required:
                  - id
                  - name
                  - status
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/openapi/specs/{id}:
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - OpenAPI
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      responses:
        '200':
          description: Successfully deleted OpenAPI spec
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/openapi/specs/status/{id}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - OpenAPI
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
      responses:
        '200':
          description: Successfully deleted OpenAPI spec
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/org/api_key:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      responses:
        '200':
          description: Successfully retrieved API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  org_api_key:
                    type: string
                required:
                  - org_api_key
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/org/api_key/regenerate:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      responses:
        '201':
          description: API key regenerated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  org_api_key:
                    type: string
                required:
                  - org_api_key
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/org/project/list:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        auto_id:
                          type: number
                        id:
                          type: string
                        org_id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        nano_id:
                          type: string
                          nullable: true
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        webhook_url:
                          type: string
                          nullable: true
                          format: uri
                        event_webhook_url:
                          type: string
                          nullable: true
                          format: uri
                        webhook_secret:
                          type: string
                          nullable: true
                        triggers_enabled:
                          type: boolean
                        last_subscribed_at:
                          type: string
                          nullable: true
                          format: date-time
                        is_new_webhook:
                          type: boolean
                        deleted:
                          type: boolean
                      required:
                        - auto_id
                        - id
                        - org_id
                        - name
                        - email
                        - nano_id
                        - created_at
                        - updated_at
                        - webhook_url
                        - event_webhook_url
                        - webhook_secret
                        - deleted
                required:
                  - data
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/new:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 50
                  pattern: ^[a-zA-Z0-9_-]+$
                  description: Name of the project
              required:
                - name
      responses:
        '200':
          description: Project Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_id:
                    type: number
                  id:
                    type: string
                  org_id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  nano_id:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  event_webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  webhook_secret:
                    type: string
                    nullable: true
                  triggers_enabled:
                    type: boolean
                  last_subscribed_at:
                    type: string
                    nullable: true
                    format: date-time
                  is_new_webhook:
                    type: boolean
                  deleted:
                    type: boolean
                required:
                  - auto_id
                  - id
                  - org_id
                  - name
                  - email
                  - nano_id
                  - created_at
                  - updated_at
                  - webhook_url
                  - event_webhook_url
                  - webhook_secret
                  - deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/delete/{projectId}:
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '400':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/{projectId}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_id:
                    type: number
                  id:
                    type: string
                  org_id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  nano_id:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  event_webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  webhook_secret:
                    type: string
                    nullable: true
                  triggers_enabled:
                    type: boolean
                  last_subscribed_at:
                    type: string
                    nullable: true
                    format: date-time
                  is_new_webhook:
                    type: boolean
                  deleted:
                    type: boolean
                required:
                  - auto_id
                  - id
                  - org_id
                  - name
                  - email
                  - nano_id
                  - created_at
                  - updated_at
                  - webhook_url
                  - event_webhook_url
                  - webhook_secret
                  - deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/{projectId}/api_keys/list:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      responses:
        '200':
          description: Successfully retrieved API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: API key ID
                        name:
                          type: string
                          description: API key name
                        key:
                          type: string
                          description: API key value
                        created_at:
                          type: string
                          format: date-time
                          description: Creation timestamp
                        last_used:
                          type: string
                          format: date-time
                          description: Last used timestamp
                      required:
                        - id
                        - name
                        - key
                        - created_at
                    description: List of API keys
                required:
                  - items
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/{projectId}/api_keys/create:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: API key name
              required:
                - name
      responses:
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: API key ID
                  name:
                    type: string
                    description: API key name
                  key:
                    type: string
                    description: API key value
                  createdAt:
                    type: string
                    format: date-time
                    description: Creation timestamp
                  lastUsed:
                    type: string
                    format: date-time
                    description: Last used timestamp
                required:
                  - id
                  - name
                  - key
                  - createdAt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/{projectId}/api_keys/create-api-key:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      responses:
        '200':
          description: Returned existing API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: API key ID
                  name:
                    type: string
                    description: API key name
                  key:
                    type: string
                    description: API key value
                  createdAt:
                    type: string
                    format: date-time
                    description: Creation timestamp
                  lastUsed:
                    type: string
                    format: date-time
                    description: Last used timestamp
                required:
                  - id
                  - name
                  - key
                  - createdAt
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: API key ID
                  name:
                    type: string
                    description: API key name
                  key:
                    type: string
                    description: API key value
                  createdAt:
                    type: string
                    format: date-time
                    description: Creation timestamp
                  lastUsed:
                    type: string
                    format: date-time
                    description: Last used timestamp
                required:
                  - id
                  - name
                  - key
                  - createdAt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/{projectId}/api_keys/remove/{id}:
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            description: API key ID
          required: true
          description: API key ID
          name: id
          in: path
        - schema:
            type: string
            description: Project ID
          required: true
          description: Project ID
          name: projectId
          in: path
      responses:
        '200':
          description: API key deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                  message:
                    type: string
                    description: Status message
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '404':
          description: API key not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/webhook:
    get:
      summary: Get webhook URL
      description: Get the webhook URL for a project
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: string
            enum:
              - trigger
              - event
            description: Type of the webhook
          required: true
          description: Type of the webhook
          name: type
          in: query
      responses:
        '200':
          description: Webhook URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    oneOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - trigger
                          webhook_url:
                            type: string
                            description: Webhook URL
                        required:
                          - type
                      - type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - event
                          event_webhook_url:
                            type: string
                            description: Event webhook URL
                        required:
                          - type
                  webhook_secret:
                    type: string
                    description: Webhook secret
                  status:
                    type: string
                    enum:
                      - success
                      - not found
                    description: Status of the webhook
                required:
                  - url
                  - webhook_secret
                  - status
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - trigger
                    - event
                  description: Type of the webhook
              required:
                - type
      responses:
        '200':
          description: Webhook URL deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                required:
                  - status
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/webhook/update:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - trigger
                    - event
                  description: Type of the webhook
                webhook_url:
                  type: string
                  format: uri
                  description: Webhook URL
              required:
                - type
                - webhook_url
      responses:
        '200':
          description: Webhook URL updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                  message:
                    type: string
                    description: Status message
                required:
                  - success
                  - message
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/org/project/webhook/refresh:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      responses:
        '200':
          description: Webhook URL updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                  message:
                    type: string
                    description: Status message
                  webhook_secret:
                    type: string
                    description: Webhook secret
                required:
                  - success
                  - message
                  - webhook_secret
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/team-members/list:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Team
      responses:
        '200':
          description: Successfully retrieved team members
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                          format: email
                        name:
                          type: string
                        role:
                          type: string
                        createdAt:
                          anyOf:
                            - type: string
                            - type: string
                        updatedAt:
                          anyOf:
                            - type: string
                            - type: string
                      required:
                        - id
                        - email
                        - name
                        - role
                        - createdAt
                        - updatedAt
                required:
                  - items
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/team-members/invite:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteTeamMemberBody'
      responses:
        '201':
          description: Team member invited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                    format: email
                  name:
                    type: string
                  role:
                    type: string
                  createdAt:
                    anyOf:
                      - type: string
                      - type: string
                  updatedAt:
                    anyOf:
                      - type: string
                      - type: string
                required:
                  - id
                  - email
                  - name
                  - role
                  - createdAt
                  - updatedAt
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Member already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/team-members/remove/{id}:
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Team
      parameters:
        - schema:
            type: string
            example: tm_123456
          required: true
          name: id
          in: path
      responses:
        '200':
          description: Team member removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/team-members/update/{id}:
    put:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Team
      parameters:
        - schema:
            type: string
            example: tm_123456
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamMemberBody'
      responses:
        '200':
          description: Team member updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                    format: email
                  name:
                    type: string
                  role:
                    type: string
                  createdAt:
                    anyOf:
                      - type: string
                      - type: string
                  updatedAt:
                    anyOf:
                      - type: string
                      - type: string
                required:
                  - id
                  - email
                  - name
                  - role
                  - createdAt
                  - updatedAt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Member not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/toolkits:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Toolkits
      parameters:
        - schema:
            type: string
          required: false
          name: category
          in: query
        - schema:
            type: string
            enum:
              - all
              - composio_managed
              - project_managed
          required: false
          name: managed_by
          in: query
        - schema:
            type: boolean
          required: false
          name: is_local
          in: query
        - schema:
            type: string
            enum:
              - usage
              - alphabetically
          required: false
          name: sort_by
          in: query
      responses:
        '200':
          description: Successfully retrieved toolkits
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                        name:
                          type: string
                        auth_schemes:
                          type: array
                          items:
                            type: string
                        composio_managed_auth_schemes:
                          type: array
                          items:
                            type: string
                        is_local_toolkit:
                          type: boolean
                        no_auth:
                          type: boolean
                        meta:
                          type: object
                          properties:
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            description:
                              type: string
                            logo:
                              type: string
                            categories:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                required:
                                  - id
                                  - name
                            triggers_count:
                              type: number
                            tools_count:
                              type: number
                          required:
                            - created_at
                            - updated_at
                            - description
                            - logo
                            - categories
                            - triggers_count
                            - tools_count
                      required:
                        - slug
                        - name
                        - is_local_toolkit
                        - meta
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/toolkits/categories:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Toolkits
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        id:
                          type: string
                      required:
                        - name
                        - id
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/toolkits/{slug}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Toolkits
      parameters:
        - schema:
            type: string
          required: true
          name: slug
          in: path
      responses:
        '200':
          description: Successfully retrieved apps
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                  name:
                    type: string
                  enabled:
                    type: boolean
                  composio_managed_auth_schemes:
                    type: array
                    items:
                      type: string
                  auth_config_details:
                    type: array
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                        fields:
                          type: object
                          properties:
                            auth_config_creation:
                              type: object
                              properties:
                                required:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      displayName:
                                        type: string
                                      default:
                                        type: string
                                        nullable: true
                                      type:
                                        type: string
                                    required:
                                      - name
                                      - displayName
                                      - type
                                optional:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      displayName:
                                        type: string
                                      default:
                                        type: string
                                        nullable: true
                                      type:
                                        type: string
                                    required:
                                      - name
                                      - displayName
                                      - type
                              required:
                                - required
                                - optional
                            connected_account_initiation:
                              type: object
                              properties:
                                required:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      displayName:
                                        type: string
                                      default:
                                        type: string
                                        nullable: true
                                      type:
                                        type: string
                                    required:
                                      - name
                                      - displayName
                                      - type
                                optional:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      displayName:
                                        type: string
                                      default:
                                        type: string
                                        nullable: true
                                      type:
                                        type: string
                                    required:
                                      - name
                                      - displayName
                                      - type
                              required:
                                - required
                                - optional
                          required:
                            - auth_config_creation
                            - connected_account_initiation
                        proxy:
                          type: object
                          properties:
                            base_url:
                              type: string
                          required:
                            - base_url
                        name:
                          type: string
                      required:
                        - mode
                        - fields
                        - name
                  is_local_toolkit:
                    type: boolean
                  meta:
                    type: object
                    properties:
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      description:
                        type: string
                      logo:
                        type: string
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                          required:
                            - name
                            - slug
                      triggers_count:
                        type: number
                      tools_count:
                        type: number
                    required:
                      - created_at
                      - updated_at
                      - description
                      - logo
                      - categories
                      - triggers_count
                      - tools_count
                required:
                  - slug
                  - name
                  - enabled
                  - is_local_toolkit
                  - meta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/tools:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      parameters:
        - schema:
            type: string
            description: The slug of the toolkit to filter by
            example: github
          required: false
          name: toolkit_slug
          in: query
        - schema:
            type: string
            description: The cursor to paginate through the results
            example: '1'
          required: false
          name: cursor
          in: query
        - schema:
            type: string
            default: '20'
            description: The number of results to return
            example: '20'
          required: false
          name: limit
          in: query
        - schema:
            type: string
            description: Whether to filter by important tools
            example: 'true'
          required: false
          name: important
          in: query
        - schema:
            type: string
            description: The search query to filter by
            example: github actions
          required: false
          name: search
          in: query
      responses:
        '200':
          description: Successfully retrieved tools
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                          description: The slug of the tool
                          example: github-actions
                        name:
                          type: string
                          description: The name of the tool
                          example: GitHub Actions
                        description:
                          type: string
                          description: The description of the tool
                          example: GitHub Actions are a way to automate tasks in GitHub
                        toolkit:
                          type: object
                          properties:
                            slug:
                              type: string
                              description: The slug of the toolkit
                              example: github
                            name:
                              type: string
                              description: The name of the toolkit
                              example: GitHub
                          required:
                            - slug
                            - name
                        input_parameters:
                          type: object
                          additionalProperties:
                            nullable: true
                          description: The input parameters of the tool
                          example:
                            repo_name:
                              type: string
                              description: The name of the repository
                              required: true
                        output_parameters:
                          type: object
                          additionalProperties:
                            nullable: true
                          description: The output parameters of the tool
                        tags:
                          type: array
                          items:
                            type: string
                          description: The tags of the tool
                      required:
                        - slug
                        - name
                        - description
                        - toolkit
                        - input_parameters
                        - output_parameters
                        - tags
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/tools/enum:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      responses:
        '200':
          description: Successfully retrieved tool enum list
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/tools/{tool_slug}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      parameters:
        - schema:
            type: string
          required: true
          name: tool_slug
          in: path
      responses:
        '200':
          description: Successfully retrieved tool
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  input_parameters:
                    type: object
                    additionalProperties:
                      nullable: true
                  output_parameters:
                    type: object
                    additionalProperties:
                      nullable: true
                  tags:
                    type: array
                    items:
                      type: string
                  toolkit:
                    type: object
                    properties:
                      slug:
                        type: string
                      name:
                        type: string
                      logo:
                        type: string
                    required:
                      - slug
                      - name
                      - logo
                  available_versions:
                    type: array
                    items:
                      type: string
                  version:
                    type: string
                required:
                  - slug
                  - name
                  - description
                  - input_parameters
                  - output_parameters
                  - tags
                  - toolkit
                  - available_versions
                  - version
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/tools/execute/{action}:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      parameters:
        - schema:
            type: string
            description: The name of the action
          required: true
          description: The name of the action
          name: action
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connected_account_id:
                  type: string
                entity_id:
                  type: string
                version:
                  type: string
                arguments:
                  type: object
                  additionalProperties:
                    nullable: true
                text:
                  type: string
                allow_tracing:
                  type: boolean
      responses:
        '200':
          description: Successfully executed action
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties:
                      nullable: true
                  error:
                    type: string
                    nullable: true
                  successful:
                    type: boolean
                  session_info:
                    nullable: true
                  log_id:
                    type: string
                required:
                  - data
                  - error
                  - successful
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/tools/execute/{actionName}/input:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      parameters:
        - schema:
            type: string
          required: true
          description: The name of the action to get inputs for
          name: actionName
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: >-
                    The use-case description for the action, this will give
                    context to LLM to generate the correct inputs for the
                    action.
                customDescription:
                  type: string
                  description: >-
                    The custom description for the action, use this to provide
                    customised context about the action to the LLM to suit your
                    use-case.
                systemPrompt:
                  type: string
                  description: >-
                    The system prompt to be used by LLM, use this to control and
                    guide the behaviour of the LLM.
                version:
                  type: string
              required:
                - text
      responses:
        '200':
          description: Successfully generated inputs for the action
          content:
            application/json:
              schema:
                type: object
                properties:
                  arguments:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: >-
                      The arguments for the action needed to execute the given
                      task.
                  error:
                    type: string
                    description: >-
                      The error message if the arguments were not generated
                      successfully.
        '400':
          description: Failed to generate inputs for the action
          content:
            application/json:
              schema:
                type: object
                properties:
                  arguments:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: >-
                      The arguments for the action needed to execute the given
                      task.
                  error:
                    type: string
                    description: >-
                      The error message if the arguments were not generated
                      successfully.
        '500':
          description: Failed to generate inputs for the action
          content:
            application/json:
              schema:
                type: object
                properties:
                  arguments:
                    type: object
                    additionalProperties:
                      nullable: true
                    description: >-
                      The arguments for the action needed to execute the given
                      task.
                  error:
                    type: string
                    description: >-
                      The error message if the arguments were not generated
                      successfully.
  /api/v3/tools/execute/proxy:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Tools
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connected_account_id:
                  type: string
                endpoint:
                  type: string
                method:
                  type: string
                  enum:
                    - GET
                    - POST
                    - PUT
                    - DELETE
                    - PATCH
                body:
                  nullable: true
                parameters:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                      type:
                        type: string
                        enum:
                          - header
                          - query
                    required:
                      - name
                      - value
                      - type
              required:
                - endpoint
                - method
      responses:
        '200':
          description: Successfully executed proxy request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                  status:
                    type: number
                  headers:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - status
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/trigger_instances/{slug}/{projectId}/handle:
    get:
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
        - schema:
            type: string
            description: The project ID
          required: true
          description: The project ID
          name: projectId
          in: path
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
    post:
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
        - schema:
            type: string
            description: The project ID
          required: true
          description: The project ID
          name: projectId
          in: path
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    head:
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
        - schema:
            type: string
            description: The project ID
          required: true
          description: The project ID
          name: projectId
          in: path
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /api/v3/trigger_instances/{slug}/status/{status}:
    patch:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
        - schema:
            type: string
            enum:
              - enable
              - disable
            description: The new status of the trigger
          required: true
          description: The new status of the trigger
          name: status
          in: path
      responses:
        '200':
          description: Successfully updated trigger status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                    description: Status of the operation
                required:
                  - status
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/trigger_instances/{slug}/upsert:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connectedAuthId:
                  type: string
                  description: Connection ID
                triggerConfig:
                  type: object
                  additionalProperties:
                    nullable: true
                  description: Trigger configuration
              required:
                - connectedAuthId
                - triggerConfig
      responses:
        '200':
          description: Successfully updated trigger instance
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggerId:
                    type: string
                    description: ID of the updated trigger
                required:
                  - triggerId
        '204':
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trigger instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: The slug of the trigger instance
          required: true
          description: The slug of the trigger instance
          name: slug
          in: path
      responses:
        '200':
          description: Successfully updated trigger instance
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggerId:
                    type: string
                    description: ID of the updated trigger
                required:
                  - triggerId
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Trigger instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v3/trigger_instances/active:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
            description: >-
              Comma-separated list of connected account IDs to filter triggers
              by
          required: false
          description: Comma-separated list of connected account IDs to filter triggers by
          name: connectedAccountIds
          in: query
        - schema:
            type: string
            description: Comma-separated list of auth config IDs to filter triggers by
          required: false
          description: Comma-separated list of auth config IDs to filter triggers by
          name: authConfigIds
          in: query
        - schema:
            type: string
            description: Comma-separated list of trigger IDs to filter triggers by
          required: false
          description: Comma-separated list of trigger IDs to filter triggers by
          name: triggerIds
          in: query
        - schema:
            type: string
            description: Comma-separated list of trigger names to filter triggers by
          required: false
          description: Comma-separated list of trigger names to filter triggers by
          name: triggerNames
          in: query
        - schema:
            type: number
            minimum: 1
            default: 1
            description: Page number for pagination. Starts from 1.
          required: false
          description: Page number for pagination. Starts from 1.
          name: page
          in: query
        - schema:
            type: number
            minimum: 1
            maximum: 100
            default: 10
            description: Number of items to return per page.
          required: false
          description: Number of items to return per page.
          name: limit
          in: query
        - schema:
            type: boolean
            nullable: true
            default: false
            description: When set to true, includes disabled triggers in the response.
          required: false
          description: When set to true, includes disabled triggers in the response.
          name: showDisabled
          in: query
      responses:
        '200':
          description: Successfully retrieved active trigger instances
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: Unique identifier of the trigger instance
                        id:
                          type: string
                          description: Nano ID of the trigger instance
                        connectedAccountId:
                          type: string
                          description: >-
                            ID of the connected account this trigger is
                            associated with
                        triggerName:
                          type: string
                          description: Name of the trigger
                        triggerData:
                          type: string
                          description: Additional data associated with the trigger instance
                        triggerConfig:
                          type: object
                          additionalProperties:
                            nullable: true
                          description: Configuration for the trigger
                        state:
                          type: object
                          additionalProperties:
                            nullable: true
                          description: State of the trigger instance
                        updatedAt:
                          type: string
                          description: >-
                            ISO 8601 timestamp when the trigger instance was
                            updated
                        disabledAt:
                          type: string
                          nullable: true
                          description: >-
                            ISO 8601 timestamp when the trigger instance was
                            disabled, if applicable
                      required:
                        - id
                        - connectedAccountId
                        - triggerName
                        - triggerConfig
                        - state
                        - updatedAt
                        - disabledAt
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/triggers_types/list/enum:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      responses:
        '200':
          description: Successfully retrieved trigger enum list
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/triggers_types/{slug}:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
          required: true
          name: slug
          in: path
      responses:
        '200':
          description: Successfully retrieved triggers
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                  name:
                    type: string
                  config:
                    type: object
                    additionalProperties:
                      nullable: true
                  payload:
                    type: object
                    additionalProperties:
                      nullable: true
                  description:
                    type: string
                  instructions:
                    type: string
                  toolkit:
                    type: object
                    properties:
                      uuid:
                        type: string
                      name:
                        type: string
                      logo:
                        type: string
                    required:
                      - uuid
                      - name
                      - logo
                required:
                  - slug
                  - name
                  - config
                  - payload
                  - description
                  - instructions
                  - toolkit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/triggers_types:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Triggers
      parameters:
        - schema:
            type: string
          required: false
          name: cursor
          in: query
        - schema:
            type: number
            nullable: true
            default: 20
          required: false
          name: limit
          in: query
        - schema:
            type: string
            description: Comma separated list of toolkit slugs
          required: false
          description: Comma separated list of toolkit slugs
          name: toolkit_slugs
          in: query
        - schema:
            type: string
          required: false
          name: auth_config_id
          in: query
        - schema:
            type: string
          required: false
          name: connected_account_id
          in: query
      responses:
        '200':
          description: Successfully retrieved triggers
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                          enum:
                            - webhook
                            - poll
                        toolkit:
                          type: object
                          properties:
                            slug:
                              type: string
                            name:
                              type: string
                          required:
                            - slug
                            - name
                      required:
                        - slug
                        - name
                        - description
                        - type
                        - toolkit
                  next_cursor:
                    type: string
                    nullable: true
                  total_pages:
                    type: number
                required:
                  - items
                  - next_cursor
                  - total_pages
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v3/org/project/trigger:
    get:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_id:
                    type: number
                  id:
                    type: string
                  org_id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  nano_id:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  event_webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  webhook_secret:
                    type: string
                    nullable: true
                  triggers_enabled:
                    type: boolean
                  last_subscribed_at:
                    type: string
                    nullable: true
                    format: date-time
                  is_new_webhook:
                    type: boolean
                  deleted:
                    type: boolean
                required:
                  - auto_id
                  - id
                  - org_id
                  - name
                  - email
                  - nano_id
                  - created_at
                  - updated_at
                  - webhook_url
                  - event_webhook_url
                  - webhook_secret
                  - deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
    patch:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Organization
      parameters:
        - schema:
            type: boolean
            description: Enabled
          required: true
          description: Enabled
          name: enabled
          in: query
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_id:
                    type: number
                  id:
                    type: string
                  org_id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  nano_id:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  event_webhook_url:
                    type: string
                    nullable: true
                    format: uri
                  webhook_secret:
                    type: string
                    nullable: true
                  triggers_enabled:
                    type: boolean
                  last_subscribed_at:
                    type: string
                    nullable: true
                    format: date-time
                  is_new_webhook:
                    type: boolean
                  deleted:
                    type: boolean
                required:
                  - auto_id
                  - id
                  - org_id
                  - name
                  - email
                  - nano_id
                  - created_at
                  - updated_at
                  - webhook_url
                  - event_webhook_url
                  - webhook_secret
                  - deleted
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                required:
                  - message
  /api/v3/payments/session:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: string
                  enum:
                    - HOBBY
                    - STARTER
                    - GROWTH
                  description: Subscription plan to purchase
                applyDiscount:
                  type: boolean
                  description: Whether to apply discount coupon
              required:
                - plan
                - applyDiscount
      responses:
        '200':
          description: Payment link created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: URL to the payment page
                  sessionId:
                    type: string
                    description: ID of the created payment session
                required:
                  - url
                  - sessionId
  /api/v3/payments/manage-subscription:
    post:
      security:
        - ApiKeyAuth: []
        - CookieAuth: []
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Billing portal session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: URL to the Stripe billing portal
                  sessionId:
                    type: string
                    description: ID of the created billing portal session
                required:
                  - url
                  - sessionId
