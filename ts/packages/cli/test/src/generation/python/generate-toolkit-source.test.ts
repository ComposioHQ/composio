import { describe, expect, it } from 'vitest';
import { generatePythonToolkitSources } from 'src/generation/python/generate-toolkit-sources';
import { createToolkitIndex } from 'src/generation/create-toolkit-index';
import { BANNER } from 'src/generation/constants';
import { makeTestToolkits } from 'test/__utils__/models/toolkits';
import { TRIGGER_TYPE_GMAIL } from 'test/__mocks__/trigger-type-gmail';

describe('generatePythonToolkitSources', () => {
  it('[Given] empty toolkits, tools, triggerTypes [Then] it returns an empty array', () => {
    const index = createToolkitIndex({
      toolkits: [],
      tools: [],
      triggerTypes: [],
    });

    const sources = generatePythonToolkitSources(BANNER)(index);

    expect(sources).toEqual([]);
  });

  it('[Given] a single toolkit with no tools or triggerTypes [Then] it returns a single Python source file', () => {
    const toolkits = makeTestToolkits([
      {
        name: 'Slack Helper',
        slug: 'slack',
      },
    ]);

    const index = createToolkitIndex({
      toolkits,
      tools: [],
      triggerTypes: [],
    });

    const sources = generatePythonToolkitSources(BANNER)(index);
    expect(sources).toHaveLength(1);
    expect(sources[0]).toHaveLength(2);
    expect(sources[0][0]).toBe('slack.py');
    expect(sources[0][1]).toMatchInlineSnapshot(`
      "# Auto-generated by Composio CLI. Do not modify manually..

      class SLACK:
          """Map of Composio's SLACK toolkit."""

          slug: str = "slack"

          class tools:
              pass

          class triggers:
              pass
      "
    `);
  });

  it('[Given] toolkits with tools and triggerTypes [Then] it returns a Python source file for each toolkit', () => {
    const toolkits = makeTestToolkits([
      {
        name: 'Gmail',
        slug: 'gmail',
      },
      {
        name: 'Slack Helper',
        slug: 'slack',
      },
    ]);

    const index = createToolkitIndex({
      toolkits,
      tools: ['GMAIL_CREATE_EMAIL_DRAFT', 'GMAIL_DELETE_MESSAGE', 'GMAIL_FETCH_EMAILS'],
      triggerTypes: [TRIGGER_TYPE_GMAIL],
    });

    const sources = generatePythonToolkitSources(BANNER)(index);
    expect(sources).toHaveLength(2);

    expect(sources[0]).toHaveLength(2);
    expect(sources[0][0]).toBe('gmail.py');
    expect(sources[0][1]).toMatchInlineSnapshot(`
      "# Auto-generated by Composio CLI. Do not modify manually..

      class GMAIL:
          """Map of Composio's GMAIL toolkit."""

          slug: str = "gmail"

          class tools:
              CREATE_EMAIL_DRAFT = "GMAIL_CREATE_EMAIL_DRAFT"
              DELETE_MESSAGE = "GMAIL_DELETE_MESSAGE"
              FETCH_EMAILS = "GMAIL_FETCH_EMAILS"

          class triggers:
              NEW_GMAIL_MESSAGE = "GMAIL_NEW_GMAIL_MESSAGE"
      "
    `);

    expect(sources[1]).toHaveLength(2);
    expect(sources[1][0]).toBe('slack.py');
    expect(sources[1][1]).toMatchInlineSnapshot(`
      "# Auto-generated by Composio CLI. Do not modify manually..

      class SLACK:
          """Map of Composio's SLACK toolkit."""

          slug: str = "slack"

          class tools:
              pass

          class triggers:
              pass
      "
    `);
  });
});
